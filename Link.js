/* node_modules/yrv/build/lib/Link.svelte generated by Svelte v3.34.0 */
import {
	SvelteComponent,
	assign,
	binding_callbacks,
	check_outros,
	component_subscribe,
	create_slot,
	detach,
	element,
	empty,
	exclude_internal_props,
	get_spread_update,
	group_outros,
	init,
	insert,
	listen,
	safe_not_equal,
	set_attributes,
	transition_in,
	transition_out,
	update_slot
} from "svelte/internal";

import { createEventDispatcher } from "svelte";

import {
	ROOT_URL,
	HASHCHANGE,
	fixedLocation,
	navigateTo,
	cleanPath,
	isActive,
	getProps,
	router
} from "./utils";

function create_else_block(ctx) {
	let a;
	let a_href_value;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[17].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[16], null);

	let a_levels = [
		/*fixedProps*/ ctx[6],
		{
			href: a_href_value = cleanPath(/*fixedHref*/ ctx[5] || /*href*/ ctx[1])
		},
		{ class: /*cssClass*/ ctx[0] },
		{ title: /*title*/ ctx[2] }
	];

	let a_data = {};

	for (let i = 0; i < a_levels.length; i += 1) {
		a_data = assign(a_data, a_levels[i]);
	}

	return {
		c() {
			a = element("a");
			if (default_slot) default_slot.c();
			set_attributes(a, a_data);
		},
		m(target, anchor) {
			insert(target, a, anchor);

			if (default_slot) {
				default_slot.m(a, null);
			}

			/*a_binding*/ ctx[19](a);
			current = true;

			if (!mounted) {
				dispose = listen(a, "click", /*handleAnchorOnClick*/ ctx[8]);
				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 65536) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[16], dirty, null, null);
				}
			}

			set_attributes(a, a_data = get_spread_update(a_levels, [
				dirty & /*fixedProps*/ 64 && /*fixedProps*/ ctx[6],
				(!current || dirty & /*fixedHref, href*/ 34 && a_href_value !== (a_href_value = cleanPath(/*fixedHref*/ ctx[5] || /*href*/ ctx[1]))) && { href: a_href_value },
				(!current || dirty & /*cssClass*/ 1) && { class: /*cssClass*/ ctx[0] },
				(!current || dirty & /*title*/ 4) && { title: /*title*/ ctx[2] }
			]));
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(a);
			if (default_slot) default_slot.d(detaching);
			/*a_binding*/ ctx[19](null);
			mounted = false;
			dispose();
		}
	};
}

// (104:0) {#if button}
function create_if_block(ctx) {
	let button_1;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[17].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[16], null);

	let button_1_levels = [
		/*fixedProps*/ ctx[6],
		{ class: /*cssClass*/ ctx[0] },
		{ title: /*title*/ ctx[2] }
	];

	let button_1_data = {};

	for (let i = 0; i < button_1_levels.length; i += 1) {
		button_1_data = assign(button_1_data, button_1_levels[i]);
	}

	return {
		c() {
			button_1 = element("button");
			if (default_slot) default_slot.c();
			set_attributes(button_1, button_1_data);
		},
		m(target, anchor) {
			insert(target, button_1, anchor);

			if (default_slot) {
				default_slot.m(button_1, null);
			}

			/*button_1_binding*/ ctx[18](button_1);
			current = true;

			if (!mounted) {
				dispose = listen(button_1, "click", /*handleOnClick*/ ctx[7]);
				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 65536) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[16], dirty, null, null);
				}
			}

			set_attributes(button_1, button_1_data = get_spread_update(button_1_levels, [
				dirty & /*fixedProps*/ 64 && /*fixedProps*/ ctx[6],
				(!current || dirty & /*cssClass*/ 1) && { class: /*cssClass*/ ctx[0] },
				(!current || dirty & /*title*/ 4) && { title: /*title*/ ctx[2] }
			]));
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(button_1);
			if (default_slot) default_slot.d(detaching);
			/*button_1_binding*/ ctx[18](null);
			mounted = false;
			dispose();
		}
	};
}

function create_fragment(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*button*/ ctx[3]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	return {
		c() {
			if_block.c();
			if_block_anchor = empty();
		},
		m(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert(target, if_block_anchor, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o(local) {
			transition_out(if_block);
			current = false;
		},
		d(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach(if_block_anchor);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let fixedProps;
	let $router;
	component_subscribe($$self, router, $$value => $$invalidate(15, $router = $$value));
	let { $$slots: slots = {}, $$scope } = $$props;
	let ref;
	let active;
	let { class: cssClass = "" } = $$props;
	let fixedHref = null;
	let { go = null } = $$props;
	let { open = null } = $$props;
	let { href = "" } = $$props;
	let { title = "" } = $$props;
	let { button = false } = $$props;
	let { exact = false } = $$props;
	let { reload = false } = $$props;
	let { replace = false } = $$props;

	// replacement for `Object.keys(arguments[0].$$.props)`
	const thisProps = ["go", "open", "href", "class", "title", "button", "exact", "reload", "replace"];

	const dispatch = createEventDispatcher();

	// this will enable `<Link on:click={...} />` calls
	function handleOnClick(e) {
		e.preventDefault();

		if (typeof go === "string" && window.history.length > 1) {
			if (go === "back") window.history.back(); else if (go === "fwd") window.history.forward(); else window.history.go(parseInt(go, 10));
			return;
		}

		if (!fixedHref && href !== "") {
			if (open) {
				let specs = typeof open === "string" ? open : "";
				const wmatch = specs.match(/width=(\d+)/);
				const hmatch = specs.match(/height=(\d+)/);
				if (wmatch) specs += `,left=${(window.screen.width - wmatch[1]) / 2}`;
				if (hmatch) specs += `,top=${(window.screen.height - hmatch[1]) / 2}`;

				if (wmatch && !hmatch) {
					specs += `,height=${wmatch[1]},top=${(window.screen.height - wmatch[1]) / 2}`;
				}

				const w = window.open(href, "", specs);

				const t = setInterval(
					() => {
						if (w.closed) {
							dispatch("close");
							clearInterval(t);
						}
					},
					120
				);
			} else window.location.href = href;

			return;
		}

		fixedLocation(
			href,
			() => {
				navigateTo(fixedHref || "/", { reload, replace });
			},
			() => dispatch("click", e)
		);
	}

	function handleAnchorOnClick(e) {
		// user used a keyboard shortcut to force open link in a new tab
		if (e.metaKey || e.ctrlKey || e.button !== 0) {
			return;
		}

		handleOnClick(e);
	}

	function button_1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			ref = $$value;
			$$invalidate(4, ref);
		});
	}

	function a_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			ref = $$value;
			$$invalidate(4, ref);
		});
	}

	$$self.$$set = $$new_props => {
		$$invalidate(22, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
		if ("class" in $$new_props) $$invalidate(0, cssClass = $$new_props.class);
		if ("go" in $$new_props) $$invalidate(9, go = $$new_props.go);
		if ("open" in $$new_props) $$invalidate(10, open = $$new_props.open);
		if ("href" in $$new_props) $$invalidate(1, href = $$new_props.href);
		if ("title" in $$new_props) $$invalidate(2, title = $$new_props.title);
		if ("button" in $$new_props) $$invalidate(3, button = $$new_props.button);
		if ("exact" in $$new_props) $$invalidate(11, exact = $$new_props.exact);
		if ("reload" in $$new_props) $$invalidate(12, reload = $$new_props.reload);
		if ("replace" in $$new_props) $$invalidate(13, replace = $$new_props.replace);
		if ("$$scope" in $$new_props) $$invalidate(16, $$scope = $$new_props.$$scope);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*href*/ 2) {
			// rebase active URL
			$: if (!(/^(\w+:)?\/\//).test(href)) {
				$$invalidate(5, fixedHref = cleanPath(ROOT_URL, true) + cleanPath(HASHCHANGE ? `#${href}` : href));
			}
		}

		if ($$self.$$.dirty & /*ref, $router, href, exact, active, button*/ 51226) {
			$: if (ref && $router.path) {
				if (isActive(href, $router.path, exact)) {
					if (!active) {
						$$invalidate(14, active = true);
						ref.setAttribute("aria-current", "page");

						if (button) {
							ref.setAttribute("disabled", true);
						}
					}
				} else if (active) {
					$$invalidate(14, active = false);
					ref.removeAttribute("disabled");
					ref.removeAttribute("aria-current");
				}
			}
		}

		// extract additional props
		$: $$invalidate(6, fixedProps = getProps($$props, thisProps));
	};

	$$props = exclude_internal_props($$props);

	return [
		cssClass,
		href,
		title,
		button,
		ref,
		fixedHref,
		fixedProps,
		handleOnClick,
		handleAnchorOnClick,
		go,
		open,
		exact,
		reload,
		replace,
		active,
		$router,
		$$scope,
		slots,
		button_1_binding,
		a_binding
	];
}

class Link extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			class: 0,
			go: 9,
			open: 10,
			href: 1,
			title: 2,
			button: 3,
			exact: 11,
			reload: 12,
			replace: 13
		});
	}
}

export default Link;//# sourceMappingURL=data:application/json;charset=utf-8;base64,